name: "Branch Protection"
on:
  push:
    branches:
      - main
jobs:
  protect-branches:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure Branch Protection
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const branches = ['main', 'develop'];
            
            for (const branch of branches) {
              try {
                console.log(`Setting up protection rules for ${branch} branch...`);
                
                // First get current branch protection
                let currentProtection;
                try {
                  currentProtection = await github.rest.repos.getBranchProtection({
                    owner,
                    repo,
                    branch,
                  });
                  console.log(`Current protection for ${branch}:`, currentProtection);
                } catch (e) {
                  console.log(`No existing protection for ${branch}`);
                }
                
                // Update branch protection
                await github.rest.repos.updateBranchProtection({
                  owner,
                  repo,
                  branch,
                  required_status_checks: {
                    strict: true,
                    contexts: ['validate']
                  },
                  enforce_admins: true,
                  required_pull_request_reviews: {
                    dismiss_stale_reviews: true,
                    require_code_owner_reviews: false,
                    required_approving_review_count: 1
                  },
                  restrictions: null
                });
                
                console.log(`Successfully protected ${branch} branch`);
              } catch (error) {
                console.error(`Error protecting ${branch} branch:`, error);
                core.setFailed(`Failed to protect ${branch} branch: ${error.message}`);
              }
            } 